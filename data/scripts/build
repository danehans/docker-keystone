#!/bin/bash
#
# Script to create and run docker-keystone image.
#
set -x
set -e

# Check for Root user
if [ "$(id -u)" != "0" ]; then
    echo "This script must be run as root or with sudo"
    exit 1
fi

# The name of the Docker base image.
# This should be a RHEL7 image with systemd.
export BASE_IMAGE="${BASE_IMAGE:-danehans/rhel7-systemd}"

# docker-keystone Github Repo branch
export REPO_BRANCH="${REPO_BRANCH:-}"

# docker-keystone Github Repo Name
export REPO_NAME="${REPO_NAME:-}"

# Configure the Docker Keystone Image Name
export IMAGE_NAME="${IMAGE_NAME:-keystone}"

# Configure the Hostname used within the Keystone container.
export HOSTNAME="${HOSTNAME:-$HOSTNAME}"

# Configure the DB Host
export DB_HOST="${DB_HOST:-127.0.0.1}"

# Configure the DB Password
export DB_PASSWORD="${DB_PASSWORD:-changeme}"

# Configure the RabbitMQ Host
export RABBIT_HOST="${RABBIT_HOST:-127.0.0.1}"

# Configure the RabbitMQ User ID
export RABBIT_USER="${RABBIT_USER:-guest}"

# Configure the RabbitMQ User Password
export RABBIT_PASSWORD="${RABBIT_PASSWORD:-guest}"

# IP Address/Hostname used by the admin/demo credential files.
export KEYSTONE_HOST="${KEYSTONE_HOST:-127.0.0.1}"

# A "shared secret" used to bootstrap Keystone.
export KEYSTONE_ADMIN_TOKEN="${KEYSTONE_ADMIN_TOKEN:-changeme}"

# Configure the Keystone Admin API Listening Port
export KEYSTONE_ADMIN_PORT="${KEYSTONE_ADMIN_PORT:-35357}"

# Configure the Keystone Public API Listening Port
export KEYSTONE_PUBLIC_PORT="${KEYSTONE_PUBLIC_PORT:-5000}"

# Configure the Service Tenant
export SERVICE_TENANT="${SERVICE_TENANT:-service}"

# Configure the Service Password
export SERVICE_PASSWORD="${SERVICE_PASSWORD:-changeme}"

# Configure the Admin User Password for the admin-openrc file
export ADMIN_USER_PASSWORD="${ADMIN_USER_PASSWORD:-changeme}"

# Configure the Demo User Password for the demo-openrc file
export DEMO_USER_PASSWORD="${DEMO_USER_PASSWORD:-changeme}"

# Set the Domain in the keystone-data.sh script
export DOMAIN="${DOMAIN:-localhost}"
export REGION="${REGION:-RegionOne}"

# Set the OpenStack services to configure within the Kesytone service catalog.
export CONFIG_KEYSTONE="${CONFIG_KEYSTONE:-true}"
export CONFIG_GLANCE="${CONFIG_GLANCE:-true}"
export CONFIG_NOVA="${CONFIG_NOVA:-true}"
export CONFIG_CINDER="${CONFIG_CINDER:-true}"
export CONFIG_SWIFT="${CONFIG_SWIFT:-true}"
export CONFIG_NEUTRON="${CONFIG_NEUTRON:-true}"
export CONFIG_HEAT="${CONFIG_HEAT:-true}"
export CONFIG_CEILOMETER="${CONFIG_CEILOMETER:-true}"
export CONFIG_TROVE="${CONFIG_TROVE:-true}"

# Set the IP address/hostname of enabled OpenStack services
# used by Keystone in the endpoint-create command.
export GLANCE_API_HOST="${GLANCE_API_HOST:-127.0.0.1}"
export NOVA_API_HOST="${NOVA_API_HOST:-127.0.0.1}"
export CINDER_AP_HOST="${CINDER_API_HOST:-127.0.0.1}"
export SWIFT_PROXY_HOST="${SWIFT_PROXY_HOST:-127.0.0.1}"
export NEUTRON_API_HOST="${NEUTRON_API_HOST:-127.0.0.1}"
export HEAT_API_HOST="${HEAT_API_HOST:-127.0.0.1}"
export CEILOMETER_API_HOST="${CEILOMETER_API_HOST:-127.0.0.1}"
export TROVE_API_HOST="${TROVE_API_HOST:-127.0.0.1}"

# Install docker-keystone project
if ! [ -d $HOME/docker-keystone ]; then
  git clone -b $REPO_BRANCH https://github.com/danehans/docker-keystone.git $HOME/docker-keystone
fi

if ! [ -f $HOME/docker-keystone/Dockerfile ]; then
  cat <<EOF > $HOME/docker-keystone/Dockerfile
# Keystone
# VERSION               0.0.1
# Tested on RHEL7 and OSP5 (i.e. Icehouse)

FROM $BASE_IMAGE
MAINTAINER Daneyon Hansen "daneyonhansen@gmail.com"

# Set environment variables within the Keystone image/container.
ENV DB_HOST $DB_HOST
ENV DB_PASSWORD $DB_PASSWORD
ENV RABBIT_HOST $RABBIT_HOST
ENV RABBIT_USER $RABBIT_USER
ENV RABBIT_PASSWORD $RABBIT_PASSWORD
ENV KEYSTONE_ADMIN_TOKEN $KEYSTONE_ADMIN_TOKEN
ENV KEYSTONE_HOST $KEYSTONE_HOST 
ENV KEYSTONE_ADMIN_PORT $KEYSTONE_ADMIN_PORT
ENV KEYSTONE_PUBLIC_PORT $KEYSTONE_PUBLIC_PORT
ENV SERVICE_TENANT $SERVICE_TENANT
ENV SERVICE_PASSWORD $SERVICE_PASSWORD
ENV DEMO_USER_PASSWORD $DEMO_USER_PASSWORD
ENV ADMIN_USER_PASSWORD $ADMIN_USER_PASSWORD
ENV DOMAIN $DOMAIN
ENV REGION $REGION
ENV CONFIG_KEYSTONE $CONFIG_KEYSTONE
ENV CONFIG_GLANCE $CONFIG_GLANCE
ENV CONFIG_NOVA $CONFIG_NOVA
ENV CONFIG_CINDER $CONFIG_CINDER
ENV CONFIG_SWIFT $CONFIG_SWIFT
ENV CONFIG_NEUTRON $CONFIG_NEUTRON
ENV CONFIG_HEAT $CONFIG_HEAT
ENV CONFIG_CEILOMETER $CONFIG_CEILOMETER
ENV CONFIG_TROVE $CONFIG_TROVE
ENV GLANCE_API_HOST $GLANCE_API_HOST
ENV NOVA_API_HOST $NOVA_API_HOST
ENV CINDER_API_HOST $CINDER_API_HOST
ENV SWIFT_PROXY_HOST $SWIFT_PROXY_HOST
ENV NEUTRON_API_HOST $NEUTRON_API_HOST
ENV HEAT_API_HOST $HEAT_API_HOST
ENV CEILOMETER_API_HOST $CEILOMETER_API_HOST
ENV TROVE_API_HOST $TROVE_API_HOST

# Set working directory for RUN and CMD instructions.
WORKDIR /root

# Required Utilities. Note: Mariadb is required for data and endpoint scripts.
RUN yum -y install openssl ntp wget rubygems mariadb
RUN systemctl enable ntpd

# Tiller Installation. For more info: https://github.com/markround/tiller
RUN gem install tiller
ADD data/tiller/common.yaml /etc/tiller/common.yaml
ADD data/tiller/environments/production.yaml /etc/tiller/environments/production.yaml
ADD data/tiller/templates/keystone.conf.erb /etc/tiller/templates/keystone.conf.erb
ADD data/tiller/templates/keystone.log.erb /etc/tiller/templates/keystone.log.erb
ADD data/tiller/templates/keystone-data.erb /etc/tiller/templates/keystone-data.erb
ADD data/tiller/templates/keystone-endpoints.erb /etc/tiller/templates/keystone-endpoints.erb

# Install Keystone Packages
RUN yum -y install openstack-keystone python-keystoneclient

# Copy Keystone Credential Files
ADD data/tiller/templates/admin-openrc.erb /etc/tiller/templates/admin-openrc.erb
ADD data/tiller/templates/demo-openrc.erb /etc/tiller/templates/demo-openrc.erb
RUN /usr/local/bin/tiller

# Enable Keystone services
RUN systemctl enable openstack-keystone

# Initialize the Keystone MySQL DB
RUN keystone-manage db_sync

# By default, Keystone uses PKI tokens. 
# Create the signing keys and certificates and restrict access to the generated data
RUN keystone-manage pki_setup --keystone-user keystone --keystone-group keystone

# Configure the Keystone service catalog
#RUN ./usr/local/bin/keystone-data.sh
#RUN ./usr/local/bin/keystone-endpoints.sh

# Expose Keystone TCP ports
EXPOSE 5000 35357

# Start Init
CMD ["/usr/sbin/init"]
EOF
fi

echo 'Dockerfile generated. Now building image'

sudo docker build -t $IMAGE_NAME $HOME/docker-keystone

exit $?
